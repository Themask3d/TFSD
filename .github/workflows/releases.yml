name: Continuous Integration and Documentation

on: [push]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: mvn -B package --file pom.xml
        working-directory: ./backend/spring-boot-h2-database-crud
      - name: Run Unit Tests
        run: mvn test
        working-directory: ./backend/spring-boot-h2-database-crud

  generate-changelog:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Generate Changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  generate-and-publish-docs:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Generate Backend Documentation
      run: |
        cd ./backend/spring-boot-h2-database-crud
        chmod +x ./mvnw
        ./mvnw javadoc:javadoc

    - name: Install Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Generate Frontend Documentation
      run: |
        cd ./frontend/vue-3-crud
        npm install
        npm run jsdoc

    - name: Copy Documentation to DOCS Directory
      run: |
        mkdir -p DOCS/backend
        mkdir -p DOCS/frontend
        cp -r ./backend/spring-boot-h2-database-crud/target/site/apidocs/* DOCS/backend/
        cp -r ./frontend/vue-3-crud/docs/* DOCS/frontend/

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./DOCS


  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: release-artifacts
          path: |
            backend/target/*.jar
            frontend/dist/*
            combined-docs/
